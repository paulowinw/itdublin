{"file":"fittext-0b85b539.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;AAC7B,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACxE,EAAE,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AACF;AACA,gBAAe,CAAC,EAAE,EAAE,UAAU,EAAE,OAAO,KAAK;AAC5C,EAAE,IAAI,QAAQ,GAAG,MAAM;AACvB,IAAI;AACJ,MAAM,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC;AACzB,MAAM,WAAW,EAAE,CAAC,GAAG,CAAC;AACxB,MAAM,SAAS,EAAE,EAAE;AACnB,KAAK;AACL,IAAI,OAAO;AACX,GAAG,CAAC;AACJ;AACA,EAAE,MAAM,GAAG,GAAG,UAAU,EAAE,EAAE;AAC5B,IAAI,MAAM,UAAU,GAAG,UAAU,IAAI,CAAC,CAAC;AACvC;AACA,IAAI,MAAM,OAAO,GAAG,YAAY;AAChC,MAAM,EAAE,CAAC,KAAK,CAAC,QAAQ;AACvB,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,IAAI,CAAC,KAAK,UAAU,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC;AACnK,KAAK,CAAC;AACN;AACA;AACA,IAAI,OAAO,EAAE,CAAC;AACd;AACA,IAAI,IAAI,gBAAgB,IAAI,MAAM,KAAK,KAAK,EAAE;AAC9C;AACA,MAAM,MAAM,MAAM,GAAG,OAAO,+BAAyB,CAAC,CAAC,IAAI,CAAC,MAAM;AAClE,QAAQ,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AACtD;AACA,QAAQ,MAAM,EAAE,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;AAC/C,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACvC,OAAO,CAAC,CAAC;AACT,KAAK,MAAM;AACX;AACA,MAAM,MAAM,EAAE,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACrC,KAAK;AACL,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;AACf;AACA;AACA,EAAE,OAAO,EAAE,CAAC;AACZ,CAAC;;;;","names":[],"sources":["src/library/fittext.js"],"sourcesContent":["/*!\n * FitText-UMD\n *\n * Copyright 2011, Dave Rupert http://daverupert.com\n * Released under the WTFPL license\n * http://sam.zoy.org/wtfpl/\n * Modified by Slawomir Kolodziej http://slawekk.info\n * Modified by Peace Chen to support modules\n *\n * Date: Tue Jan 12 2016 10:03:36 GMT-0600 (CST)\n */\n\nconst extend = (obj, ext) => {\n  for (var key in ext) if (ext.hasOwnProperty(key)) obj[key] = ext[key];\n  return obj;\n};\n\nexport default (el, kompressor, options) => {\n  var settings = extend(\n    {\n      minFontSize: -1 / 0,\n      maxFontSize: 1 / 0,\n      container: el,\n    },\n    options,\n  );\n\n  const fit = function (el) {\n    const compressor = kompressor || 1;\n\n    const resizer = function () {\n      el.style.fontSize =\n        Math.max(Math.min((settings?.container?.clientWidth || 0) / (compressor * 10), parseFloat(settings.maxFontSize)), parseFloat(settings.minFontSize)) + 'px';\n    };\n\n    // Call once to set.\n    resizer();\n\n    if ('ResizeObserver' in window === false) {\n      // Loads polyfill asynchronously, only if required.\n      const module = import('@juggle/resize-observer').then(() => {\n        window.ResizeObserver = module.ResizeObserver;\n        // Bind events\n        const ro = new ResizeObserver(resizer);\n        ro.observe(settings.container);\n      });\n    } else {\n      // Bind events\n      const ro = new ResizeObserver(resizer);\n      ro.observe(settings.container);\n    }\n  };\n\n  if (el.length) for (let i = 0; i < el.length; i++) fit(el[i]);\n  else fit(el);\n\n  // return set of elements\n  return el;\n};\n"],"version":3}