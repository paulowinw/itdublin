{"version":3,"file":"presto-audio.js","sourceRoot":"","sources":["../../../../../src/components/core/providers/presto-audio/presto-audio.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Event, EventEmitter, Prop, State } from '@stencil/core';\nimport { presetAttributes } from '../../../../interfaces';\nimport { lightOrDark } from '../../../../util';\n\n@Component({\n  tag: 'presto-audio',\n  styleUrl: 'presto-audio.scss',\n  shadow: false,\n})\nexport class PrestoAudio {\n  private el: HTMLDivElement;\n  @Prop({ mutable: true }) getRef?: (elm?: HTMLAudioElement) => void;\n  @Prop() autoplay: boolean;\n  @Prop() src: string;\n  @Prop() preload: string;\n  @Prop() poster: string;\n  @Prop() player: any;\n  @Prop() preset: presetAttributes;\n  @Prop() tracks: { label: string; src: string; srcLang: string }[];\n  @Prop() provider: string;\n  @Prop() mediaTitle: string;\n  @Prop() audioAttributes: object;\n\n  @Event() playVideo: EventEmitter<void>;\n  @Event() pauseVideo: EventEmitter<true>;\n\n  @State() width: number;\n\n  renderPosterImage() {\n    if (this.poster) {\n      return (\n        <div class=\"presto-audio__poster\">\n          <img src={this.poster} />\n        </div>\n      );\n    }\n    return;\n  }\n\n  hasPosterArea() {\n    return !!this.poster || !!this.preset?.['play-large'];\n  }\n\n  renderMobilePoster() {\n    return (\n      <div class=\"presto-audio__poster-wrapper-mobile\">\n        {!!this.preset?.['play-large'] && this.renderLargePlay('presto-audio__large-play-button is-relative')}\n        <div class=\"presto-audio__mobile-title\">{this.mediaTitle}</div>\n      </div>\n    );\n  }\n\n  renderLargePlay(className = 'presto-audio__large-play-button') {\n    return (\n      <div\n        class={className}\n        onClick={() => {\n          if (!this.player.playing) {\n            this.playVideo.emit();\n          } else {\n            this.pauseVideo.emit();\n          }\n        }}\n      >\n        <svg class=\"presto-audio__icon-play\" width=\"16\" height=\"18\" viewBox=\"0 0 16 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15.5588 9.00005L0.117662 17.915L0.117662 0.0850823L15.5588 9.00005Z\" />\n        </svg>\n        <svg class=\"presto-audio__icon-pause\" width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect width=\"5\" height=\"17\" />\n          <rect x=\"12\" width=\"5\" height=\"17\" />\n        </svg>\n      </div>\n    );\n  }\n\n  componentDidLoad() {\n    // Only run if ResizeObserver is supported.\n    if ('ResizeObserver' in window) {\n      var ro = new ResizeObserver(entries => {\n        entries.forEach(entry => (this.width = entry.contentRect.width));\n      });\n      ro.observe(this.el);\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={el => (this.el = el as HTMLDivElement)}\n        class={{\n          'presto-audio__wrapper': true,\n          'has-poster': !!this.poster,\n          'has-play-large': !!this.preset?.['play-large'],\n          'is-playing': this.player?.playing,\n          'has-light-background': lightOrDark(this.preset?.background_color) === 'light',\n          'has-dark-background': lightOrDark(this.preset?.background_color) === 'dark',\n          'breakpoint-small': this.width < 520,\n          'skin-stacked': this.width < 520,\n          'breakpoint-large': this.width >= 520,\n        }}\n      >\n        {this.hasPosterArea() && (\n          <div class=\"presto-audio__poster-wrapper\">\n            {!!this.preset?.['play-large'] && <div class=\"presto-audio__large-play-wrapper\">{this.renderLargePlay()}</div>}\n            {this.renderPosterImage()}\n          </div>\n        )}\n\n        {this.hasPosterArea() && this.renderMobilePoster()}\n\n        <div class=\"presto-audio__controls-wrapper\">\n          <div class=\"presto-audio__title\">{this.mediaTitle}</div>\n          <audio part=\"audio-player\" ref={this.getRef} autoplay={this.autoplay} preload={this.preload} data-poster={this.poster} {...this.audioAttributes}>\n            <source src={this.src} />\n            {!!this.tracks &&\n              !!this.tracks.length &&\n              this.tracks.map(track => <track kind=\"captions\" label={track?.label ? track.label : 'Captions'} src={track?.src} srclang={track?.srcLang ? track?.srcLang : 'en'} />)}\n          </audio>\n        </div>\n      </div>\n    );\n  }\n}\n"]}