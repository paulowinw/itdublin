{"version":3,"file":"presto-email-overlay-ui.js","sourceRoot":"","sources":["../../../../../../src/components/core/features/presto-email-overlay/ui/presto-email-overlay-ui.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAE/E,OAAO,OAAO,MAAM,mCAAmC,CAAC;AAOxD,MAAM,OAAO,cAAc;;;;;;;;;;;;;;;;IA8BzB;;;OAGG;IACH,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;QACH,CAAC,CAAC,cAAc,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;QACd,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,WAAW,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9D,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE;YACzB,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YAC3C,WAAW,EAAE,CAAC;SACf,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;IAC9B,CAAC;IAED,MAAM;;QACJ,OAAO,CACL,4DAAK,KAAK,EAAE,WAAW,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,EAAsB,CAAC;YAClH,4DAAK,KAAK,EAAC,SAAS;gBAClB,2DAAI,KAAK,EAAE,IAAI,CAAC,eAAe,IAAI,UAAU,IAAG,IAAI,CAAC,QAAQ,KAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,oBAAoB,CAAA,CAAM;gBACtG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAChB,gCAA+C,CAChD,CAAC,CAAC,CAAC,CACF,YAAM,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACvC,aAAO,IAAI,EAAC,OAAO,EAAC,WAAW,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,QAAQ,SAAS;oBAC/I,cAAQ,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,UAAU,KAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,IAAI,CAAA,CAAU,CAC/D,CACR;gBACA,IAAI,CAAC,YAAY,IAAI,0DAAG,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,YAAY,CAAK;gBAC7D,IAAI,CAAC,UAAU,IAAI,0DAAG,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,IAAI,UAAU,GAAM;gBACjG,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CACnB,4DACE,KAAK,EAAC,MAAM,EACZ,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;oBACnB,CAAC,IAEA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI;uBAAE,IAAI;8BACb,CACP,CACG,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\nimport { i18nConfig } from '../../../../../interfaces';\nimport fitText from '../../../../../library/fittext.js';\n\n@Component({\n  tag: 'presto-email-overlay-ui',\n  styleUrl: 'presto-email-overlay-ui.scss',\n  shadow: true,\n})\nexport class EmailOverlayUI {\n  private textInput?: HTMLInputElement;\n\n  /**\n   * Props\n   */\n  @Prop() headline: string;\n  @Prop() bottomText: string;\n  @Prop() buttonText: string;\n  @Prop() allowSkip: boolean;\n  @Prop() borderRadius: number;\n  @Prop() isLoading: boolean;\n  @Prop() errorMessage: string;\n  @Prop() direction?: 'rtl';\n  @Prop() i18n: i18nConfig;\n  @Prop() provider: string;\n  @Prop() type: string;\n\n  /**\n   * State\n   */\n  @State() email: string;\n  @State() isAudioProvider: boolean;\n\n  /**\n   * Events\n   */\n  @Event() submitForm: EventEmitter<object>;\n  @Event() skip: EventEmitter<object>;\n\n  /**\n   * Handle form submission\n   * @param e Event\n   */\n  handleSubmit(e) {\n    this.submitForm.emit({\n      email: this.email,\n    });\n    e.preventDefault();\n  }\n\n  componentDidLoad() {\n    let currentType = this.type || this.provider;\n    this.isAudioProvider = currentType === 'audio' ? true : false;\n    fitText(this.textInput, 3, {\n      maxFontSize: this.isAudioProvider ? 15 : 20,\n      minFontSize: 8,\n    });\n  }\n\n  /**\n   * Handle input change\n   * @param e Event\n   */\n  handleChange(e) {\n    this.email = e.target.value;\n  }\n\n  render() {\n    return (\n      <div class={`overlay ${this.direction === 'rtl' ? 'rtl' : ''}`} ref={el => (this.textInput = el as HTMLInputElement)}>\n        <div class=\"content\">\n          <h1 class={this.isAudioProvider && 'is-small'}>{this.headline || this?.i18n?.emailDefaultHeadline}</h1>\n          {this.isLoading ? (\n            <presto-player-spinner></presto-player-spinner>\n          ) : (\n            <form onSubmit={e => this.handleSubmit(e)}>\n              <input type=\"email\" placeholder={this?.i18n?.emailPlaceholder} value={this.email} onInput={event => this.handleChange(event)} required></input>\n              <button type=\"submit\">{this.buttonText || this?.i18n?.play}</button>\n            </form>\n          )}\n          {this.errorMessage && <p class=\"error\">{this.errorMessage}</p>}\n          {this.bottomText && <p innerHTML={this.bottomText} class={this.isAudioProvider && 'is-small'}></p>}\n          {!!this.allowSkip && (\n            <div\n              class=\"skip\"\n              onClick={() => {\n                this.skip.emit();\n              }}\n            >\n              {this?.i18n?.skip} &rarr;\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]}