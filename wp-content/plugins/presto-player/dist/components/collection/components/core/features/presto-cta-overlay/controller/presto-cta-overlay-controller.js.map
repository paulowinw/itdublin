{"version":3,"file":"presto-cta-overlay-controller.js","sourceRoot":"","sources":["../../../../../../src/components/core/features/presto-cta-overlay/controller/presto-cta-overlay-controller.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, h, Prop, State, Watch } from '@stencil/core';\nimport { i18nConfig, CTA } from '../../../../../interfaces';\nimport { timePassed } from '../../../../../util';\n\n@Component({\n  tag: 'presto-cta-overlay-controller',\n  styleUrl: 'presto-cta-overlay-controller.css',\n  shadow: false,\n})\nexport class PrestoCtaOverlayController {\n  @Prop() ended: boolean;\n  @Prop({ reflect: true }) currentTime: number;\n  @Prop({ reflect: true }) duration: number;\n  @Prop() direction?: 'rtl';\n  @Prop() cta?: CTA;\n  @Prop() i18n: i18nConfig;\n  @Prop() provider: string;\n\n  @State() enabled: boolean;\n  @State() show: boolean;\n  @State() loading: boolean;\n  @State() error: string;\n  @State() skipped: boolean;\n  @State() percentagePassed: number = 0;\n\n  @Event() playVideo: EventEmitter<void>;\n  @Event() pauseVideo: EventEmitter<boolean>;\n  @Event() restartVideo: EventEmitter<void>;\n  @Event() ctaStateChange: EventEmitter<boolean>;\n\n  componentWillLoad() {\n    this.handleDuration();\n  }\n\n  /**\n   * Handle with the player is ended\n   * @param val\n   * @returns\n   */\n  @Watch('ended')\n  handleEnded(val) {\n    if (val) {\n      if (this?.cta?.percentage !== 100) return;\n      this.show = true;\n    }\n  }\n\n  /**\n   * Wait for duration to start before checking time\n   * @returns void\n   */\n  @Watch('duration')\n  handleDuration() {\n    this.enabled = this.skipped ? false : this?.cta?.enabled;\n    this.handleTime();\n  }\n\n  @Watch('currentTime')\n  @Watch('duration')\n  handlePercentagePassed() {\n    this.percentagePassed = (this.currentTime / this.duration) * 100;\n  }\n\n  /**\n   * Watch current time and check if we should\n   * pause the video.\n   */\n  @Watch('currentTime')\n  handleEnabled() {\n    if (!this.show) return; // not showing.\n    if (this.skipped) return; // already skipped.\n    this.pauseVideo.emit(true); // pause if enabled.\n  }\n\n  /**\n   * When current time changes, check to see if we should\n   * enable the overlay\n   * @returns void\n   */\n  @Watch('currentTime')\n  handleTime() {\n    if (!this.enabled) return; // not enabled.\n    if (this.skipped) return; // skipped.\n    if (this?.cta?.percentage === 100) return; // we'll catch this on ended event.\n    this.checkTime();\n  }\n\n  /**\n   * Set enabled/disabled based on time that has passed\n   */\n  checkTime() {\n    this.show = timePassed({\n      current: this.currentTime,\n      duration: this.duration,\n      showAfter: this?.cta?.percentage || 0,\n    });\n  }\n\n  /**\n   * Skip email collection\n   */\n  skip() {\n    this.skipped = true;\n    this.show = false;\n    this.playVideo.emit();\n  }\n\n  /**\n   * Handle rewatch click.\n   */\n  rewatch() {\n    this.ended = false;\n    this.show = false;\n    this.restartVideo.emit();\n  }\n\n  /**\n   * Maybe render\n   * @returns JSX\n   */\n\n  @Watch('show')\n  handleCtaStateChange(val) {\n    this.ctaStateChange.emit(val);\n  }\n  render() {\n    if (!this.show) {\n      return;\n    }\n\n    return (\n      <presto-cta-overlay-ui\n        style={{\n          '--presto-player-button-border-radius': `${this?.cta?.button_radius}px`,\n          ...(this?.cta?.background_opacity ? { '--presto-player-cta-background-opacity': `${this?.cta?.background_opacity / 100}` } : {}),\n          ...(this?.cta?.button_color\n            ? {\n                '--presto-player-button-color': `${this?.cta?.button_color}`,\n              }\n            : {}),\n          ...(this?.cta?.button_text_color\n            ? {\n                '--presto-player-button-text': `${this?.cta?.button_text_color}`,\n              }\n            : {}),\n        }}\n        direction={this.direction}\n        class=\"cta-overlay\"\n        i18n={this.i18n}\n        headline={this?.cta?.headline}\n        bottom-text={this?.cta?.bottom_text}\n        show-button={this?.cta?.show_button}\n        buttonLink={this?.cta?.button_link}\n        allowSkip={!this.ended && this?.cta?.show_skip}\n        allowRewatch={this.ended && this?.cta?.show_rewatch}\n        button-text={this?.cta?.button_text}\n        onSkip={() => this.skip()}\n        onRewatch={() => this.rewatch()}\n        provider={this.provider}\n      ></presto-cta-overlay-ui>\n    );\n  }\n}\n"]}