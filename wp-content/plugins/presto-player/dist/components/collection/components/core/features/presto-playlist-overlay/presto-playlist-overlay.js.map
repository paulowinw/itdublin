{"version":3,"file":"presto-playlist-overlay.js","sourceRoot":"","sources":["../../../../../src/components/core/features/presto-playlist-overlay/presto-playlist-overlay.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, EventEmitter, Event, State, Host, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'presto-playlist-overlay',\n  styleUrl: 'presto-playlist-overlay.scss',\n  shadow: true,\n})\nexport class PrestoPlaylistOverlay {\n  /**\tCaching timout action */\n  private timeout: any;\n\n  /** Title of the upcoming next playlist item */\n  @Prop() nextItemTitle: string;\n\n  /** String for the Button that says `Next Video` */\n  @Prop() nextItemString: string;\n\n  /** Transition duration for next video. */\n  @Prop() transitionDuration: number = 5;\n\n  /** Flag to handle if this item is the last item in the list. */\n  @Prop() isLastItem: boolean = false;\n\n  /** Rewatch item event */\n  @Event() rewatch: EventEmitter<void>;\n\n  /** Next item play event */\n  @Event() next: EventEmitter<void>;\n\n  /** Class value for the Next button to show the fill animation. */\n  @State() animating: boolean = false;\n\n  /** Visibility flag for the Overlay */\n  @Prop() show: boolean = false;\n\n  /**\n   * Watch for show changes\n   */\n  @Watch('show')\n  handleShow() {\n    // we are not showing or this is the last item.\n    if (!this.show || this.isLastItem) {\n      this.animating = false;\n      return;\n    }\n\n    // start animating after 200ms\n    setTimeout(() => {\n      this.animating = true;\n    }, 200);\n\n    this.timeout = setTimeout(() => {\n      if (this.show) {\n        this.handleNext();\n      }\n    }, (this.transitionDuration || 5) * 1000 + 200);\n  }\n\n  /**\n   * Handle the rewatch click event.\n   */\n  handleRewatch() {\n    this.rewatch.emit();\n  }\n\n  /**\n   * Handle the next click event.\n   */\n  handleNext() {\n    this.next.emit();\n  }\n\n  /**\n   * Lifecycle: disconnected\n   */\n  disconnectedCallback() {\n    clearTimeout(this.timeout);\n  }\n\n  @Watch('animating')\n  handleAnimatingChange(val) {\n    if (val) return;\n    clearTimeout(this.timeout);\n  }\n\n  /**\n   * Rendering the component\n   */\n  render() {\n    if (!this.show) {\n      return (\n        <Host>\n          <div style={{ display: 'none' }}></div>\n        </Host>\n      );\n    }\n    const upNext = window?.prestoPlayer?.i18n?.upNext || 'Up Nexts';\n    const startOver = window?.prestoPlayer?.i18n?.startOver || 'Start Over';\n    const rewatch = window?.prestoPlayer?.i18n?.rewatch || 'Rewatch';\n    return (\n      <div\n        class=\"playlist__overlay\"\n        onClick={e => {\n          // This prevents the video from playing/pausing when the overlay is clicked.\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          this.animating = false;\n        }}\n      >\n        <div class=\"playlist__overlay-wrap\">\n          {!this.isLastItem ? <p>{upNext}:</p> : <p>{startOver}:</p>}\n\n          <h2>{this.nextItemTitle}</h2>\n\n          <div class=\"playlist__overlay-buttons\">\n            <button class=\"previous\" onClick={() => this.handleRewatch()}>\n              <svg width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15 0V9L8 4.5L15 0Z\" fill=\"white\" />\n                <path d=\"M7 0V9L0 4.5L7 0Z\" fill=\"white\" />\n              </svg>\n              {rewatch}\n            </button>\n            <button\n              class={{\n                'next': true,\n                'fill-button': this.animating,\n              }}\n              onClick={e => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                this.handleNext();\n              }}\n            >\n              <svg width=\"10\" height=\"12\" viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M0 0V12L9.5 6L0 0Z\" fill=\"black\" />\n              </svg>\n              {!this.isLastItem ? 'Next ' + (this?.nextItemString || 'Video') : startOver}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}