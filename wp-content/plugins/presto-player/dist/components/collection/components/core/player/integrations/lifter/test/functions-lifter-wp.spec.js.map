{"version":3,"file":"functions-lifter-wp.spec.js","sourceRoot":"","sources":["../../../../../../../src/components/core/player/integrations/lifter/test/functions-lifter-wp.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// import all so we can spy and mock using jest.spyOn\nimport * as helpers from '../helper';\n\nimport { getEventMeta, track_event } from '../helper';\nimport { onPauseVideo, onPlayingVideo, onEndedVideo } from '../lifter';\n\ndescribe('Lifter LMS', () => {\n  describe('onPauseVideo', () => {\n    it('calls track_event when video is paused', () => {\n      // spy on track_event function.\n      jest.spyOn(helpers, 'track_event');\n\n      // we can return a mock implementation here if we want to, but this function already returns null.\n      helpers.track_event.mockImplementation(() => null);\n\n      // call onPauseVideo with event.\n      onPauseVideo({\n        detail: {\n          plyr: {\n            currentTime: 10,\n            duration: 20,\n            source: 'https://test.com',\n            provider: 'test',\n            config: {\n              id: 1,\n            },\n          },\n        },\n      });\n\n      // we asser that the function was called with specific parameters.\n      expect(track_event).toHaveBeenCalledWith('paused', { duration: 20, id: 1, provider: 'test', ts: 10, url: 'https://test.com' });\n    });\n  });\n\n  describe('onPlayingVideo', () => {\n    it('calls track_event when video is playing', () => {\n      // spy on track_event function.\n      jest.spyOn(helpers, 'track_event');\n\n      // we can return a mock implementation here if we want to, but this function already returns null.\n      helpers.track_event.mockImplementation(() => null);\n\n      // call onPlaying with event.\n      onPlayingVideo({\n        detail: {\n          plyr: {\n            currentTime: 10,\n            duration: 20,\n            source: 'https://test.com',\n            provider: 'test',\n            config: {\n              id: 1,\n            },\n          },\n        },\n      });\n\n      // we asser that the function was called with specific parameters.\n      // for pause\n      expect(track_event).toHaveBeenCalledWith('paused', { duration: 20, id: 1, provider: 'test', ts: 10, url: 'https://test.com' });\n      // for playing\n      expect(track_event).toHaveBeenCalledWith('played', { duration: 20, id: 1, provider: 'test', ts: 10, url: 'https://test.com' });\n    });\n  });\n\n  // ts = 0\n  describe('onStartingVideo', () => {\n    it('calls track_event when video is starting', () => {\n      // spy on track_event function.\n      jest.spyOn(helpers, 'track_event');\n\n      // we can return a mock implementation here if we want to, but this function already returns null.\n      helpers.track_event.mockImplementation(() => null);\n\n      // call onPlaying with event.\n      onPlayingVideo({\n        detail: {\n          plyr: {\n            currentTime: 0,\n            duration: 20,\n            source: 'https://test.com',\n            provider: 'test',\n            config: {\n              id: 1,\n            },\n          },\n        },\n      });\n\n      // we asser that the function was called with specific parameters.\n      // for started\n      expect(track_event).toHaveBeenCalledWith('started', { duration: 20, id: 1, provider: 'test', ts: 0, url: 'https://test.com' });\n    });\n  });\n\n  describe('onEndingVideo', () => {\n    it('calls track_event, toggle_mark_complete, do_ajax_completion when video is ending', () => {\n      // spy on track_event function.\n      jest.spyOn(helpers, 'track_event');\n      jest.spyOn(helpers, 'toggle_mark_complete');\n      jest.spyOn(helpers, 'do_ajax_completion');\n\n      // we can return a mock implementation here if we want to, but this function already returns null.\n      helpers.track_event.mockImplementation(() => null);\n      helpers.toggle_mark_complete.mockImplementation(() => null);\n      helpers.do_ajax_completion.mockImplementation(() => null);\n\n      // call onPlaying with event.\n      onEndedVideo({\n        detail: {\n          plyr: {\n            currentTime: 20,\n            duration: 20,\n            source: 'https://test.com',\n            provider: 'test',\n            config: {\n              id: 1,\n            },\n          },\n        },\n      });\n\n      // we asser that the function was called with specific parameters.\n      // for ending\n      expect(track_event).toHaveBeenCalledWith('ended', { duration: 20, id: 1, provider: 'test', ts: 20, url: 'https://test.com' });\n    });\n  });\n\n  describe('getEventMeta', () => {\n    it('transforms event data into event meta', () => {\n      expect(\n        getEventMeta({\n          currentTime: 10,\n          duration: 20,\n          source: 'https://test.com',\n          provider: 'test',\n          config: {\n            id: 1,\n          },\n        }),\n      ).toEqual({ duration: 20, id: 1, provider: 'test', ts: 10, url: 'https://test.com' });\n    });\n  });\n});\n"]}