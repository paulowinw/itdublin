{"version":3,"file":"presto-email-overlay-controller.e2e.js","sourceRoot":"","sources":["../../../../../../../src/components/core/features/presto-email-overlay/controller/test/presto-email-overlay-controller.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('presto-email-overlay-controller', () => {\n  let page, element;\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent('<presto-email-overlay-controller></presto-email-overlay-controller>');\n    element = await page.find('presto-email-overlay-controller');\n  });\n\n  it('renders', async () => {\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it('Should only show after time has passed', async () => {\n    await page.$eval('presto-email-overlay-controller', (elm: any) => {\n      elm.emailCollection = {\n        enabled: true,\n        percentage: 10,\n      };\n      elm.currentTime = 0;\n      elm.duration = 100;\n    });\n\n    await page.waitForChanges();\n\n    let overlay = await page.find('presto-email-overlay-controller presto-email-overlay-ui');\n    expect(overlay).toBe(null);\n\n    await page.$eval('presto-email-overlay-controller', (elm: any) => {\n      elm.currentTime = 11;\n    });\n\n    await page.waitForChanges();\n\n    overlay = await page.find('presto-email-overlay-controller presto-email-overlay-ui');\n    expect(overlay).not.toBe(null);\n\n    await page.$eval('presto-email-overlay-controller', (elm: any) => {\n      elm.emailCollection = {\n        enabled: true,\n        percentage: 100,\n      };\n      elm.currentTime = 99.99; // check for rounding errors\n    });\n\n    overlay = await page.find('presto-email-overlay-controller presto-email-overlay-ui');\n    expect(overlay).not.toBe(null);\n  });\n\n  it('Displays a skip or rewatch button', async () => {\n    await page.$eval('presto-email-overlay-controller', (elm: any) => {\n      elm.emailCollection = {\n        enabled: true,\n        percentage: 0,\n      };\n      elm.currentTime = 0;\n      elm.duration = 100;\n    });\n\n    await page.waitForChanges();\n\n    const component = await page.find('presto-email-overlay-controller presto-email-overlay-ui');\n    let skip = component.shadowRoot.querySelector('.skip');\n    expect(skip).toBeDefined();\n\n    let rewatch = component.shadowRoot.querySelector('.rewatch');\n    expect(rewatch).toBeNull();\n\n    await page.$eval('presto-email-overlay-controller', (elm: any) => {\n      elm.emailCollection = {\n        enabled: true,\n        percentage: 0,\n        show_skip: true,\n        show_rewatch: true,\n      };\n      elm.currentTime = 0;\n      elm.duration = 100;\n    });\n\n    await page.waitForChanges();\n\n    skip = component.shadowRoot.querySelector('.skip');\n    expect(skip).toBeDefined();\n\n    rewatch = component.shadowRoot.querySelector('.rewatch');\n    expect(rewatch).toBeNull();\n\n    await page.$eval('presto-email-overlay-controller', (elm: any) => {\n      elm.emailCollection = {\n        enabled: true,\n        percentage: 0,\n        show_skip: true,\n        show_rewatch: true,\n      };\n      elm.ended = true;\n      elm.currentTime = 100;\n    });\n\n    await page.waitForChanges();\n\n    skip = component.shadowRoot.querySelector('.skip');\n    expect(skip).toBeNull();\n\n    await page.$eval('presto-email-overlay-controller', (elm: any) => {\n      elm.emailCollection = {\n        enabled: true,\n        percentage: 0,\n        show_skip: true,\n        show_rewatch: true,\n      };\n      elm.ended = true;\n      elm.currentTime = 100;\n    });\n\n    await page.waitForChanges();\n\n    skip = component.shadowRoot.querySelector('.skip');\n    expect(skip).toBeNull();\n\n    rewatch = component.shadowRoot.querySelector('.rewatch');\n    expect(rewatch).toBeDefined();\n  });\n});\n"]}