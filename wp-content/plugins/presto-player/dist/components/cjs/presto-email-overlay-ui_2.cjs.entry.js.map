{"file":"presto-email-overlay-ui.presto-player-spinner.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,uBAAuB,GAAG,ykFAAykF,CAAC;AAC1mF,mCAAe,uBAAuB;;MCQzB,cAAc;;;;;;;;;;;;;;;;;;;;;;;IAkCzB,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;QACH,CAAC,CAAC,cAAc,EAAE,CAAC;KACpB;IAED,gBAAgB;QACd,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,WAAW,KAAK,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC;QAC9DA,eAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE;YACzB,WAAW,EAAE,IAAI,CAAC,eAAe,GAAG,EAAE,GAAG,EAAE;YAC3C,WAAW,EAAE,CAAC;SACf,CAAC,CAAC;KACJ;;;;;IAMD,YAAY,CAAC,CAAC;QACZ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;KAC7B;IAED,MAAM;;QACJ,QACEC,kEAAK,KAAK,EAAE,WAAW,IAAI,CAAC,SAAS,KAAK,KAAK,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,SAAS,GAAG,EAAsB,CAAC,IAClHA,kEAAK,KAAK,EAAC,SAAS,IAClBA,iEAAI,KAAK,EAAE,IAAI,CAAC,eAAe,IAAI,UAAU,IAAG,IAAI,CAAC,QAAQ,KAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,oBAAoB,CAAA,CAAM,EACtG,IAAI,CAAC,SAAS,IACbA,sCAA+C,KAE/CA,kBAAM,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IACvCA,mBAAO,IAAI,EAAC,OAAO,EAAC,WAAW,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,QAAQ,SAAS,EAC/IA,oBAAQ,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,UAAU,KAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,IAAI,CAAA,CAAU,CAC/D,CACR,EACA,IAAI,CAAC,YAAY,IAAIA,gEAAG,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,YAAY,CAAK,EAC7D,IAAI,CAAC,UAAU,IAAIA,gEAAG,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,IAAI,UAAU,GAAM,EACjG,CAAC,CAAC,IAAI,CAAC,SAAS,KACfA,kEACE,KAAK,EAAC,MAAM,EACZ,OAAO,EAAE;gBACP,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;aAClB,IAEA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI;eAAE,IAAI,YACb,CACP,CACG,CACF,EACN;KACH;;;;AC/FH,MAAM,gBAAgB,GAAG,sgBAAsgB,CAAC;AAChiB,kCAAe,gBAAgB;;MCMlB,aAAa;;;;IACxB,MAAM;QACJ,OAAOA,mEAAM,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,SAAS,eAAW,MAAM,eAAW,QAAQ,GAAQ,CAAC;KACtF;;;;;;;","names":["fitText","h"],"sources":["src/components/core/features/presto-email-overlay/ui/presto-email-overlay-ui.scss?tag=presto-email-overlay-ui&encapsulation=shadow","src/components/core/features/presto-email-overlay/ui/presto-email-overlay-ui.tsx","src/components/ui/presto-spinner/presto-spinner.scss?tag=presto-player-spinner&encapsulation=shadow","src/components/ui/presto-spinner/presto-spinner.tsx"],"sourcesContent":[":host {\n  display: block;\n  font-size: 16px;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 99999;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n$family: 'San Francisco', -apple-system, BlinkMacSystemFont, '.SFNSText-Regular', Avenir, 'Avenir Next', 'Helvetica Neue', 'Segoe UI', Helvetica, Arial, sans-serif;\n\na {\n  color: #fff;\n}\n\n.overlay {\n  position: relative;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  padding: 48px;\n  color: #fff;\n  font-family: var(--plyr-font-family, $family);\n  height: 100%;\n\n  &:before {\n    content: '';\n    border-radius: var(--presto-player-border-radius, 0);\n    opacity: var(--presto-player-email-background-opacity, 0.75);\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: var(--presto-player-email-background, #000);\n    z-index: -1;\n    box-shadow: inset 0 0 100px black;\n  }\n\n  &.rtl form {\n    flex-direction: row-reverse;\n  }\n}\n\n.content {\n  width: 20em;\n}\n\nform {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n}\n\ninput {\n  background: #fff;\n  border: none;\n  font-size: 0.8em;\n  line-height: 20px;\n  padding: 6px 8px;\n  border-radius: 0;\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  border-radius: var(--presto-player-email-border-radius, 0) 0 0 var(--presto-player-email-border-radius);\n  flex: 1;\n\n  @media screen and (min-width: 700px) {\n    padding: 10px 14px;\n  }\n\n  &:focus {\n    border-color: var(--plyr-color-main, #000);\n    z-index: 1;\n  }\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n}\n\n.rtl input {\n  border-radius: 0 var(--presto-player-email-border-radius, 0) var(--presto-player-email-border-radius) 0;\n}\n\nbutton {\n  background-color: var(--presto-player-button-color, var(--plyr-color-main));\n  border-color: var(--presto-player-button-color, var(--plyr-color-main));\n  color: var(--presto-player-button-text, #fff);\n  appearance: none;\n  padding: 6px 12px;\n  align-items: center;\n  display: inline-flex;\n  border-width: 1px;\n  border-color: transparent;\n  border-radius: 0;\n  cursor: pointer;\n  font-size: 0.8em;\n  border-radius: 0 var(--presto-player-email-border-radius, 0) var(--presto-player-email-border-radius) 0;\n\n  @media screen and (min-width: 700px) {\n    padding: 10px 18px;\n  }\n\n  &:focus {\n    box-shadow: rgb(255, 255, 255) 0px 0px 0px 2px, var(--plyr-color-main, #000) 0px 0px 0px 4px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n    z-index: 1;\n  }\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n}\n\n.rtl button {\n  border-radius: var(--presto-player-email-border-radius, 0) 0 0 var(--presto-player-email-border-radius);\n}\n\nh1 {\n  font-size: 1.5em;\n  font-weight: 500;\n  margin: 0 0 22px 0;\n  max-width: 600px;\n  line-height: 1.1em;\n\n  &.is-small {\n    margin-bottom: 1em;\n    font-size: 1.1em;\n  }\n}\n\n.skip {\n  font-size: 0.8em;\n  font-weight: 600;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 4%;\n  cursor: pointer;\n}\n\np {\n  font-size: 0.7em;\n  margin: 0;\n  margin-top: 1.5em;\n\n  &.is-small {\n    font-size: 0.9em;\n    margin-top: 1em;\n  }\n}\n","import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\nimport { i18nConfig } from '../../../../../interfaces';\nimport fitText from '../../../../../library/fittext.js';\n\n@Component({\n  tag: 'presto-email-overlay-ui',\n  styleUrl: 'presto-email-overlay-ui.scss',\n  shadow: true,\n})\nexport class EmailOverlayUI {\n  private textInput?: HTMLInputElement;\n\n  /**\n   * Props\n   */\n  @Prop() headline: string;\n  @Prop() bottomText: string;\n  @Prop() buttonText: string;\n  @Prop() allowSkip: boolean;\n  @Prop() borderRadius: number;\n  @Prop() isLoading: boolean;\n  @Prop() errorMessage: string;\n  @Prop() direction?: 'rtl';\n  @Prop() i18n: i18nConfig;\n  @Prop() provider: string;\n  @Prop() type: string;\n\n  /**\n   * State\n   */\n  @State() email: string;\n  @State() isAudioProvider: boolean;\n\n  /**\n   * Events\n   */\n  @Event() submitForm: EventEmitter<object>;\n  @Event() skip: EventEmitter<object>;\n\n  /**\n   * Handle form submission\n   * @param e Event\n   */\n  handleSubmit(e) {\n    this.submitForm.emit({\n      email: this.email,\n    });\n    e.preventDefault();\n  }\n\n  componentDidLoad() {\n    let currentType = this.type || this.provider;\n    this.isAudioProvider = currentType === 'audio' ? true : false;\n    fitText(this.textInput, 3, {\n      maxFontSize: this.isAudioProvider ? 15 : 20,\n      minFontSize: 8,\n    });\n  }\n\n  /**\n   * Handle input change\n   * @param e Event\n   */\n  handleChange(e) {\n    this.email = e.target.value;\n  }\n\n  render() {\n    return (\n      <div class={`overlay ${this.direction === 'rtl' ? 'rtl' : ''}`} ref={el => (this.textInput = el as HTMLInputElement)}>\n        <div class=\"content\">\n          <h1 class={this.isAudioProvider && 'is-small'}>{this.headline || this?.i18n?.emailDefaultHeadline}</h1>\n          {this.isLoading ? (\n            <presto-player-spinner></presto-player-spinner>\n          ) : (\n            <form onSubmit={e => this.handleSubmit(e)}>\n              <input type=\"email\" placeholder={this?.i18n?.emailPlaceholder} value={this.email} onInput={event => this.handleChange(event)} required></input>\n              <button type=\"submit\">{this.buttonText || this?.i18n?.play}</button>\n            </form>\n          )}\n          {this.errorMessage && <p class=\"error\">{this.errorMessage}</p>}\n          {this.bottomText && <p innerHTML={this.bottomText} class={this.isAudioProvider && 'is-small'}></p>}\n          {!!this.allowSkip && (\n            <div\n              class=\"skip\"\n              onClick={() => {\n                this.skip.emit();\n              }}\n            >\n              {this?.i18n?.skip} &rarr;\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/**\n * @prop --track-color: The color of the spinner's track.\n * @prop --indicator-color: The color of the spinner's indicator.\n * @prop --stroke-width: The width of the indicator.\n */\n:host {\n  position: relative;\n  box-sizing: border-box;\n\n  & *,\n  & *:before,\n  & *:after {\n    box-sizing: inherit;\n  }\n\n  --track-color: #0d131e20;\n  --indicator-color: var(--plyr-color-main);\n  --stroke-width: 2px;\n\n  display: inline-flex;\n}\n\n.spinner {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  border: solid var(--stroke-width) var(--track-color);\n  border-top-color: var(--indicator-color);\n  border-right-color: var(--indicator-color);\n  animation: 1s linear infinite spin;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'presto-player-spinner',\n  styleUrl: 'presto-spinner.scss',\n  shadow: true,\n})\nexport class PrestoSpinner {\n  render() {\n    return <span part=\"base\" class=\"spinner\" aria-busy=\"true\" aria-live=\"polite\"></span>;\n  }\n}\n"],"version":3}