{"file":"presto-video2.js","mappings":";;AAAA,MAAM,cAAc,GAAG,sBAAsB,CAAC;AAC9C,0BAAe,cAAc;;MCMhB,WAAW;;;;;;;;;;;;;;;IAYtB,MAAM;QACJ,QACE,4EACE,KAAK,EAAE;gBACL,uBAAuB,EAAE,IAAI;gBAC7B,mBAAmB,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;aAClE,EACD,IAAI,EAAC,OAAO,EACZ,GAAG,EAAE,IAAI,CAAC,MAAM,EAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,IAAI,CAAC,OAAO,iBACR,IAAI,CAAC,MAAM,EACxB,WAAW,EAAE,IAAI,CAAC,WAAW,IACzB,IAAI,CAAC,eAAe,GAExB,+DAAQ,GAAG,EAAE,IAAI,CAAC,GAAG,GAAI,EACxB,CAAC,CAAC,IAAI,CAAC,MAAM;YACZ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;YACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,aAAO,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,IAAG,KAAK,CAAC,KAAK,GAAG,UAAU,EAAE,GAAG,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,EAAE,OAAO,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,IAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,GAAG,IAAI,GAAI,CAAC,CACjK,EACR;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/core/providers/presto-video/presto-video.css?tag=presto-video","src/components/core/providers/presto-video/presto-video.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'presto-video',\n  styleUrl: 'presto-video.css',\n  shadow: false,\n})\nexport class PrestoVideo {\n  @Prop({ mutable: true }) getRef?: (elm?: HTMLVideoElement) => void;\n  @Prop() autoplay: boolean;\n  @Prop() src: string;\n  @Prop() preload: string;\n  @Prop() poster: string;\n  @Prop() player: any;\n  @Prop() tracks: { label: string; src: string; srcLang: string }[];\n  @Prop() playsinline: boolean;\n  @Prop() provider: string;\n  @Prop() videoAttributes: object;\n\n  render() {\n    return (\n      <video\n        class={{\n          'presto-player__player': true,\n          'plyr__video-embed': ['youtube', 'vimeo'].includes(this.provider),\n        }}\n        part=\"video\"\n        ref={this.getRef}\n        autoplay={this.autoplay}\n        preload={this.preload}\n        data-poster={this.poster}\n        playsinline={this.playsinline}\n        {...this.videoAttributes}\n      >\n        <source src={this.src} />\n        {!!this.tracks &&\n          !!this.tracks.length &&\n          this.tracks.map(track => <track kind=\"captions\" label={track?.label ? track.label : 'Captions'} src={track?.src} srclang={track?.srcLang ? track?.srcLang : 'en'} />)}\n      </video>\n    );\n  }\n}\n"],"version":3}