{"file":"tutor.js","mappings":"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","names":[],"sources":["src/components/core/player/integrations/tutor.js"],"sourcesContent":["export default function (player) {\n  // autoload course content\n  const autoload_content = () => {\n    if (!_tutorobject.nonce_key || !_tutorobject?.ajaxurl) {\n      return;\n    }\n    const post_id = getVideoData().post_id;\n    let data = { action: 'autoload_next_course_content', post_id };\n    data[_tutorobject.nonce_key] = _tutorobject[_tutorobject.nonce_key];\n\n    jQuery.post(_tutorobject?.ajaxurl, data).done(function (response) {\n      if (response?.success && response?.data?.next_url) {\n        location.href = response.data.next_url;\n      }\n    });\n  };\n\n  // sync time with server\n  const sync_time = (instance, options) => {\n    const post_id = getVideoData().post_id;\n    let data = { action: 'sync_video_playback', currentTime: instance.currentTime, duration: instance.duration, post_id };\n    data[_tutorobject.nonce_key] = _tutorobject[_tutorobject.nonce_key];\n\n    let data_send = data;\n    if (options) {\n      data_send = Object.assign(data, options);\n    }\n    jQuery.post(_tutorobject?.ajaxurl, data_send);\n  };\n\n  // get video data\n  const getVideoData = () => {\n    const video_track_data = jQuery('#tutor_video_tracking_information').val();\n    return video_track_data ? JSON.parse(video_track_data) : {};\n  };\n\n  // update time on server every 250ms\n  let tempTimeNow = 0;\n  let intervalSeconds = 30; //Send to tutor backend about video playing time in this interval\n  player.on('timeupdate', event => {\n    const instance = event.detail.plyr;\n    const tempTimeNowInSec = tempTimeNow / 4; //timeupdate firing 250ms interval\n    if (tempTimeNowInSec >= intervalSeconds) {\n      sync_time(instance);\n      tempTimeNow = 0;\n    }\n    tempTimeNow++;\n  });\n\n  // on end, sync time and autoload content\n  player.on('ended', event => {\n    const video_data = getVideoData();\n    const instance = event.detail.plyr;\n    const data = { is_ended: true };\n    sync_time(instance, data);\n    if (video_data.autoload_next_course_content) {\n      autoload_content();\n    }\n  });\n}\n"],"version":3}